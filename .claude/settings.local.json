{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "Bash(node:*)",
      "Bash(rm:*)",
      "Bash(npm run dev:*)",
      "Bash(grep:*)",
      "Bash(npm run:*)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(git commit:*)",
      "Bash(ls:*)",
      "Bash(tail:*)",
      "Bash(del add-components-column.js)",
      "Bash(npm install:*)",
      "Bash(npx supabase db remote-query:*)",
      "Bash(npx tsc:*)",
      "Bash(npx supabase db dump:*)",
      "Bash(mkdir:*)",
      "WebFetch(domain:supabase.com)",
      "Bash(del count-email-templates.js)",
      "Bash(npx supabase functions deploy:*)",
      "Bash(npx supabase:*)",
      "Bash(find:*)",
      "Bash(git tag:*)",
      "Bash(wsl:*)",
      "Bash(taskkill:*)",
      "Bash(powershell:*)",
      "Bash(python:*)",
      "Bash(curl:*)",
      "Bash(start ~/Downloads/python-3.11.9-amd64.exe /quiet InstallAllUsers=0 PrependPath=1)",
      "Bash(py:*)",
      "Bash(PYTHONPATH=. py -3.11 -m SuperClaude install)",
      "Bash(PYTHONPATH=. py -3.11 -m SuperClaude install --profile quick)",
      "Bash(PYTHONPATH=. py -3.11 -m SuperClaude install --profile quick --yes)",
      "Bash(PYTHONPATH=. py -3.11 -m SuperClaude install --component mcp --yes)",
      "Bash(cp:*)",
      "WebFetch(domain:localhost)",
      "Bash(dir:*)",
      "Bash(del check-activity-logs.js)",
      "Bash(cmd /c:*)",
      "Bash(del check-todd-status.js)",
      "Bash(mv:*)",
      "Bash(claude mcp)",
      "Bash(claude mcp:*)",
      "Bash(del nul)",
      "Bash(npm search:*)",
      "Bash(supabase:*)",
      "Bash(netlify:*)",
      "Bash(npx playwright:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(gh auth:*)",
      "Bash(where npx)",
      "Bash(npx:*)",
      "Bash(npm uninstall:*)",
      "mcp__netlify__netlify-user-services",
      "mcp__github__search_repositories",
      "mcp__supabase__list_tables",
      "mcp__supabase__get_project_url",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_close",
      "mcp__supabase__execute_sql",
      "mcp__supabase__apply_migration",
      "mcp__playwright__browser_type",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_snapshot",
      "mcp__playwright__browser_console_messages",
      "mcp__playwright__browser_take_screenshot",
      "mcp__playwright__browser_wait_for",
      "mcp__playwright__browser_evaluate",
      "mcp__playwright__browser_press_key",
      "mcp__playwright__browser_select_option",
      "Bash(npm audit:*)",
      "Bash(npm update:*)",
      "Bash(touch:*)",
      "mcp__netlify__netlify-project-services",
      "mcp__supabase__get_advisors",
      "mcp__supabase__get_logs",
      "Bash(npm version:*)",
      "mcp__supabase__deploy_edge_function",
      "mcp__playwright__browser_network_requests",
      "mcp__supabase__list_edge_functions",
      "mcp__playwright__browser_navigate_back",
      "mcp__playwright__browser_handle_dialog",
      "Bash(wmic process where \"name='node.exe'\" call terminate:*)",
      "Bash(tsc --noEmit)",
      "WebFetch(domain:api.github.com)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "Bash(git clone:*)",
      "mcp__playwright__browser_resize",
      "Bash(del \"E:\\2025-car-audio-events\\car-audio-events\\src\\pages\\TestAnalyticsMobile.tsx\")",
      "Bash(copy \"E:\\2025-car-audio-events\\car-audio-events\\src\\pages\\Dashboard.tsx\" \"E:\\2025-car-audio-events\\car-audio-events\\src\\pages\\Dashboard.backup.tsx\")",
      "Bash(del \"E:\\2025-car-audio-events\\car-audio-events\\src\\pages\\LeaderboardEnhanced.tsx\")",
      "Bash(git pull:*)",
      "Bash(del:*)",
      "Bash(rg:*)",
      "mcp__playwright__browser_install",
      "Bash(del create-stats-function.cjs)",
      "mcp__playwright__browser_tab_list",
      "mcp__playwright__browser_tab_new",
      "Bash(psql:*)",
      "Bash(set SUPABASE_ACCESS_TOKEN=sbp_1c13a87b3d24e7ceefec1bb66cc3ce7ef8ab4b81)",
      "WebFetch(domain:mecacaraudio.com)",
      "WebFetch(domain:iasca.com)",
      "WebFetch(domain:www.termpro.com)",
      "WebFetch(domain:www.basswars.org)",
      "mcp__supabase__search_docs"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "netlify",
    "supabase",
    "github",
    "playwright"
  ]
}