-- Fix RLS issues for refunds and payment_provider_configs tables

-- Enable RLS on refunds table
ALTER TABLE public.refunds ENABLE ROW LEVEL SECURITY;

-- Enable RLS on payment_provider_configs table
ALTER TABLE public.payment_provider_configs ENABLE ROW LEVEL SECURITY;

-- Drop existing policies if they exist (to avoid conflicts)
DROP POLICY IF EXISTS "Users can view their own refunds" ON public.refunds;
DROP POLICY IF EXISTS "Admins can view all refunds" ON public.refunds;
DROP POLICY IF EXISTS "Admins can create refunds" ON public.refunds;
DROP POLICY IF EXISTS "Admins can update refunds" ON public.refunds;
DROP POLICY IF EXISTS "Anyone can view payment configs" ON public.payment_provider_configs;
DROP POLICY IF EXISTS "Admins can manage payment configs" ON public.payment_provider_configs;
DROP POLICY IF EXISTS "Admins can insert payment configs" ON public.payment_provider_configs;
DROP POLICY IF EXISTS "Admins can update payment configs" ON public.payment_provider_configs;
DROP POLICY IF EXISTS "Admins can delete payment configs" ON public.payment_provider_configs;

-- Create RLS policies for refunds table
CREATE POLICY "Users can view their own refunds" 
ON public.refunds 
FOR SELECT 
USING ((SELECT auth.uid()) = user_id);

CREATE POLICY "Admins can view all refunds" 
ON public.refunds 
FOR SELECT 
USING (
  EXISTS (
    SELECT 1 FROM public.users 
    WHERE users.id = (SELECT auth.uid()) 
    AND users.membership_type = 'admin'
  )
);

CREATE POLICY "Admins can create refunds" 
ON public.refunds 
FOR INSERT 
WITH CHECK (
  EXISTS (
    SELECT 1 FROM public.users 
    WHERE users.id = (SELECT auth.uid()) 
    AND users.membership_type = 'admin'
  )
);

CREATE POLICY "Admins can update refunds" 
ON public.refunds 
FOR UPDATE 
USING (
  EXISTS (
    SELECT 1 FROM public.users 
    WHERE users.id = (SELECT auth.uid()) 
    AND users.membership_type = 'admin'
  )
);

-- Create RLS policies for payment_provider_configs table
CREATE POLICY "Anyone can view payment configs" 
ON public.payment_provider_configs 
FOR SELECT 
USING (true);

CREATE POLICY "Admins can insert payment configs" 
ON public.payment_provider_configs 
FOR INSERT 
WITH CHECK (
  EXISTS (
    SELECT 1 FROM public.users 
    WHERE users.id = (SELECT auth.uid()) 
    AND users.membership_type = 'admin'
  )
);

CREATE POLICY "Admins can update payment configs" 
ON public.payment_provider_configs 
FOR UPDATE 
USING (
  EXISTS (
    SELECT 1 FROM public.users 
    WHERE users.id = (SELECT auth.uid()) 
    AND users.membership_type = 'admin'
  )
);

CREATE POLICY "Admins can delete payment configs" 
ON public.payment_provider_configs 
FOR DELETE 
USING (
  EXISTS (
    SELECT 1 FROM public.users 
    WHERE users.id = (SELECT auth.uid()) 
    AND users.membership_type = 'admin'
  )
);